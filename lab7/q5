#include <iostream>
using namespace std;

class Media {
protected:
    string title, publicationDate, uniqueID, publisher;

public:
    Media(string t, string pDate, string uID, string pub)
        : title(t), publicationDate(pDate), uniqueID(uID), publisher(pub) {}

    virtual void displayInfo() {
        cout << "Title: " << title << "\nPublication Date: " << publicationDate << "\nUnique ID: " << uniqueID << "\nPublisher: " << publisher << "\n";
    }

    void checkOut() {
        cout << title << " has been checked out.\n";
    }

    void returnItem() {
        cout << title << " has been returned.\n";
    }
};

class Book : public Media {
private:
    string author, ISBN;
    int numberOfPages;

public:
    Book(string t, string pDate, string uID, string pub, string a, string isbn, int pages)
        : Media(t, pDate, uID, pub), author(a), ISBN(isbn), numberOfPages(pages) {}

    void displayInfo() override {
        Media::displayInfo();
        cout << "Author: " << author << "\nISBN: " << ISBN << "\nPages: " << numberOfPages << "\n";
    }
};

class DVD : public Media {
private:
    string director, rating;
    int duration;

public:
    DVD(string t, string pDate, string uID, string pub, string dir, int dur, string rate)
        : Media(t, pDate, uID, pub), director(dir), duration(dur), rating(rate) {}

    void displayInfo() override {
        Media::displayInfo();
        cout << "Director: " << director << "\nDuration: " << duration << " mins\nRating: " << rating << "\n";
    }
};

class CD : public Media {
private:
    string artist, genre;
    int numberOfTracks;

public:
    CD(string t, string pDate, string uID, string pub, string art, string gen, int tracks)
        : Media(t, pDate, uID, pub), artist(art), genre(gen), numberOfTracks(tracks) {}

    void displayInfo() override {
        Media::displayInfo();
        cout << "Artist: " << artist << "\nGenre: " << genre << "\nTracks: " << numberOfTracks << "\n";
    }
};

class Magazine : public Media {
private:
    int issueNumber;

public:
    Magazine(string t, string pDate, string uID, string pub, int issue)
        : Media(t, pDate, uID, pub), issueNumber(issue) {}

    void displayInfo() override {
        Media::displayInfo();
        cout << "Issue Number: " << issueNumber << "\n";
    }
};

int main() {
    Book b("Data Structures", "2022", "B101", "Oxford Press", "Robert Lafore", "987654321", 600);
    DVD d("Interstellar", "2014", "D202", "Paramount Pictures", "Christopher Nolan", 169, "PG-13");
    CD c("Back in Black", "1980", "C303", "Atlantic Records", "AC/DC", "Rock", 10);
    Magazine m("Scientific American", "2024", "M404", "Springer", 230);

    b.displayInfo();
    d.displayInfo();
    c.displayInfo();
    m.displayInfo();

    b.checkOut();
    b.returnItem();

    return 0;
}
